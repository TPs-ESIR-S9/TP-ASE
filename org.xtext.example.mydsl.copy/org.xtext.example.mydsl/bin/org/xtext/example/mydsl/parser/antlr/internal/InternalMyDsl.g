/*
 * generated by Xtext 2.31.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RoboMLProgram";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRoboMLProgram
entryRuleRoboMLProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoboMLProgramRule()); }
	iv_ruleRoboMLProgram=ruleRoboMLProgram
	{ $current=$iv_ruleRoboMLProgram.current; }
	EOF;

// Rule RoboMLProgram
ruleRoboMLProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRoboMLProgramAccess().getRoboMLProgramAction_0(),
					$current);
			}
		)
		otherlv_1='RoboMLProgram'
		{
			newLeafNode(otherlv_1, grammarAccess.getRoboMLProgramAccess().getRoboMLProgramKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoboMLProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='function'
			{
				newLeafNode(otherlv_3, grammarAccess.getRoboMLProgramAccess().getFunctionKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getRoboMLProgramAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRoboMLProgramAccess().getFunctionFunctionParserRuleCall_3_2_0());
					}
					lv_function_5_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRoboMLProgramRule());
						}
						add(
							$current,
							"function",
							lv_function_5_0,
							"org.xtext.example.mydsl.MyDsl.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getRoboMLProgramAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRoboMLProgramAccess().getFunctionFunctionParserRuleCall_3_3_1_0());
						}
						lv_function_7_0=ruleFunction
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRoboMLProgramRule());
							}
							add(
								$current,
								"function",
								lv_function_7_0,
								"org.xtext.example.mydsl.MyDsl.Function");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getRoboMLProgramAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getRoboMLProgramAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDeplacementParserRuleCall_0());
		}
		this_Deplacement_0=ruleDeplacement
		{
			$current = $this_Deplacement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getRotationParserRuleCall_1());
		}
		this_Rotation_1=ruleRotation
		{
			$current = $this_Rotation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLoopParserRuleCall_2());
		}
		this_Loop_2=ruleLoop
		{
			$current = $this_Loop_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getAssignementParserRuleCall_3());
		}
		this_Assignement_3=ruleAssignement
		{
			$current = $this_Assignement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSetValueParserRuleCall_4());
		}
		this_SetValue_4=ruleSetValue
		{
			$current = $this_SetValue_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getConditionParserRuleCall_5());
		}
		this_Condition_5=ruleCondition
		{
			$current = $this_Condition_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		otherlv_1='Function'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getFunctionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='newAttribute'
			{
				newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getNewAttributeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getNewAttributeRMLObjectEnumRuleCall_3_1_0());
					}
					lv_newAttribute_4_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"newAttribute",
							lv_newAttribute_4_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='returnType'
			{
				newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getReturnTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeRMLObjectEnumRuleCall_4_1_0());
					}
					lv_returnType_6_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						set(
							$current,
							"returnType",
							lv_returnType_6_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='instruction'
			{
				newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getInstructionKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getInstructionStatementParserRuleCall_5_2_0());
					}
					lv_instruction_9_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_9_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getFunctionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getInstructionStatementParserRuleCall_5_3_1_0());
						}
						lv_instruction_11_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"instruction",
								lv_instruction_11_0,
								"org.xtext.example.mydsl.MyDsl.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_13='variable'
			{
				newLeafNode(otherlv_13, grammarAccess.getFunctionAccess().getVariableKeyword_6_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getFunctionAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getVariableVariableParserRuleCall_6_2_0());
					}
					lv_variable_15_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"variable",
							lv_variable_15_0,
							"org.xtext.example.mydsl.MyDsl.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getFunctionAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getVariableVariableParserRuleCall_6_3_1_0());
						}
						lv_variable_17_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"variable",
								lv_variable_17_0,
								"org.xtext.example.mydsl.MyDsl.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18='}'
			{
				newLeafNode(otherlv_18, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getFunctionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableAccess().getVariableAction_0(),
					$current);
			}
		)
		otherlv_1='Variable'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getVariableKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='variableName'
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getVariableNameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getVariableNameRMLObjectEnumRuleCall_3_1_0());
					}
					lv_variableName_4_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"variableName",
							lv_variableName_4_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='variableValue'
			{
				newLeafNode(otherlv_5, grammarAccess.getVariableAccess().getVariableValueKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getVariableValueRMLObjectEnumRuleCall_4_1_0());
					}
					lv_variableValue_6_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"variableValue",
							lv_variableValue_6_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='variableref'
			{
				newLeafNode(otherlv_7, grammarAccess.getVariableAccess().getVariablerefKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getVariableAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getVariablerefVariableRefParserRuleCall_5_2_0());
					}
					lv_variableref_9_0=ruleVariableRef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						add(
							$current,
							"variableref",
							lv_variableref_9_0,
							"org.xtext.example.mydsl.MyDsl.VariableRef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getVariableAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableAccess().getVariablerefVariableRefParserRuleCall_5_3_1_0());
						}
						lv_variableref_11_0=ruleVariableRef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							add(
								$current,
								"variableref",
								lv_variableref_11_0,
								"org.xtext.example.mydsl.MyDsl.VariableRef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getVariableAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleDeplacement
entryRuleDeplacement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeplacementRule()); }
	iv_ruleDeplacement=ruleDeplacement
	{ $current=$iv_ruleDeplacement.current; }
	EOF;

// Rule Deplacement
ruleDeplacement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Deplacement'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeplacementAccess().getDeplacementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeplacementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='movementType'
			{
				newLeafNode(otherlv_2, grammarAccess.getDeplacementAccess().getMovementTypeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeplacementAccess().getMovementTypeDirectionEnumRuleCall_2_1_0());
					}
					lv_movementType_3_0=ruleDirection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeplacementRule());
						}
						set(
							$current,
							"movementType",
							lv_movementType_3_0,
							"org.xtext.example.mydsl.MyDsl.Direction");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='unit'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeplacementAccess().getUnitKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeplacementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getDeplacementAccess().getUnitUnitCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='deplacementDistance'
			{
				newLeafNode(otherlv_6, grammarAccess.getDeplacementAccess().getDeplacementDistanceKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeplacementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getDeplacementAccess().getDeplacementDistanceEntityCrossReference_5_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeplacementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRotation
entryRuleRotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotationRule()); }
	iv_ruleRotation=ruleRotation
	{ $current=$iv_ruleRotation.current; }
	EOF;

// Rule Rotation
ruleRotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rotation'
		{
			newLeafNode(otherlv_0, grammarAccess.getRotationAccess().getRotationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRotationAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rotationAngle'
		{
			newLeafNode(otherlv_2, grammarAccess.getRotationAccess().getRotationAngleKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRotationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRotationAccess().getRotationAngleEntityCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='rotationSens'
		{
			newLeafNode(otherlv_4, grammarAccess.getRotationAccess().getRotationSensKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRotationRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRotationAccess().getRotationSensEntityCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getRotationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoopAccess().getLoopAction_0(),
					$current);
			}
		)
		otherlv_1='Loop'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getLoopKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='booleanExpression'
			{
				newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getBooleanExpressionKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLoopRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getLoopAccess().getBooleanExpressionEntityCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='instruction'
			{
				newLeafNode(otherlv_5, grammarAccess.getLoopAccess().getInstructionKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getInstructionStatementParserRuleCall_4_2_0());
					}
					lv_instruction_7_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						add(
							$current,
							"instruction",
							lv_instruction_7_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getLoopAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLoopAccess().getInstructionStatementParserRuleCall_4_3_1_0());
						}
						lv_instruction_9_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLoopRule());
							}
							add(
								$current,
								"instruction",
								lv_instruction_9_0,
								"org.xtext.example.mydsl.MyDsl.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_11='variable'
			{
				newLeafNode(otherlv_11, grammarAccess.getLoopAccess().getVariableKeyword_5_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoopAccess().getVariableVariableParserRuleCall_5_2_0());
					}
					lv_variable_13_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoopRule());
						}
						add(
							$current,
							"variable",
							lv_variable_13_0,
							"org.xtext.example.mydsl.MyDsl.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getLoopAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLoopAccess().getVariableVariableParserRuleCall_5_3_1_0());
						}
						lv_variable_15_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLoopRule());
							}
							add(
								$current,
								"variable",
								lv_variable_15_0,
								"org.xtext.example.mydsl.MyDsl.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleAssignement
entryRuleAssignement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignementRule()); }
	iv_ruleAssignement=ruleAssignement
	{ $current=$iv_ruleAssignement.current; }
	EOF;

// Rule Assignement
ruleAssignement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Assignement'
		{
			newLeafNode(otherlv_0, grammarAccess.getAssignementAccess().getAssignementKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssignementAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='assignableVariable'
			{
				newLeafNode(otherlv_2, grammarAccess.getAssignementAccess().getAssignableVariableKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAssignementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAssignementAccess().getAssignableVariableVariableCrossReference_2_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='entity'
		{
			newLeafNode(otherlv_4, grammarAccess.getAssignementAccess().getEntityKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAssignementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAssignementAccess().getEntityEntityCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getAssignementAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSetValue
entryRuleSetValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetValueRule()); }
	iv_ruleSetValue=ruleSetValue
	{ $current=$iv_ruleSetValue.current; }
	EOF;

// Rule SetValue
ruleSetValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SetValue'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetValueAccess().getSetValueKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetValueAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='entityToSet'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetValueAccess().getEntityToSetKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSetValueRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSetValueAccess().getEntityToSetEntityCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSetValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionAccess().getConditionAction_0(),
					$current);
			}
		)
		otherlv_1='Condition'
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getConditionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='booleanExpression'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getBooleanExpressionKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getConditionAccess().getBooleanExpressionEntityCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='statementIf'
			{
				newLeafNode(otherlv_5, grammarAccess.getConditionAccess().getStatementIfKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getStatementIfStatementParserRuleCall_4_2_0());
					}
					lv_statementIf_7_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						add(
							$current,
							"statementIf",
							lv_statementIf_7_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getConditionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionAccess().getStatementIfStatementParserRuleCall_4_3_1_0());
						}
						lv_statementIf_9_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionRule());
							}
							add(
								$current,
								"statementIf",
								lv_statementIf_9_0,
								"org.xtext.example.mydsl.MyDsl.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_11='statementElse'
			{
				newLeafNode(otherlv_11, grammarAccess.getConditionAccess().getStatementElseKeyword_5_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getStatementElseStatementParserRuleCall_5_2_0());
					}
					lv_statementElse_13_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						add(
							$current,
							"statementElse",
							lv_statementElse_13_0,
							"org.xtext.example.mydsl.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getConditionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionAccess().getStatementElseStatementParserRuleCall_5_3_1_0());
						}
						lv_statementElse_15_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionRule());
							}
							add(
								$current,
								"statementElse",
								lv_statementElse_15_0,
								"org.xtext.example.mydsl.MyDsl.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_17='variable'
			{
				newLeafNode(otherlv_17, grammarAccess.getConditionAccess().getVariableKeyword_6_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getVariableVariableParserRuleCall_6_2_0());
					}
					lv_variable_19_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						add(
							$current,
							"variable",
							lv_variable_19_0,
							"org.xtext.example.mydsl.MyDsl.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getConditionAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConditionAccess().getVariableVariableParserRuleCall_6_3_1_0());
						}
						lv_variable_21_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConditionRule());
							}
							add(
								$current,
								"variable",
								lv_variable_21_0,
								"org.xtext.example.mydsl.MyDsl.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEntity_Impl
entryRuleEntity_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntity_ImplRule()); }
	iv_ruleEntity_Impl=ruleEntity_Impl
	{ $current=$iv_ruleEntity_Impl.current; }
	EOF;

// Rule Entity_Impl
ruleEntity_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntity_ImplAccess().getEntityAction_0(),
					$current);
			}
		)
		otherlv_1='Entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntity_ImplAccess().getEntityKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntity_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='entityType'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntity_ImplAccess().getEntityTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntity_ImplAccess().getEntityTypeRMLObjectEnumRuleCall_3_1_0());
					}
					lv_entityType_4_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntity_ImplRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_4_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getEntity_ImplAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FunctionCall'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getFunctionCallKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='entityType'
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getEntityTypeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionCallAccess().getEntityTypeRMLObjectEnumRuleCall_2_1_0());
					}
					lv_entityType_3_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionCallRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_3_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4='function'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getFunctionKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_4_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleArithmeticExpression
entryRuleArithmeticExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArithmeticExpressionRule()); }
	iv_ruleArithmeticExpression=ruleArithmeticExpression
	{ $current=$iv_ruleArithmeticExpression.current; }
	EOF;

// Rule ArithmeticExpression
ruleArithmeticExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ArithmeticExpression'
		{
			newLeafNode(otherlv_0, grammarAccess.getArithmeticExpressionAccess().getArithmeticExpressionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getArithmeticExpressionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='entityType'
			{
				newLeafNode(otherlv_2, grammarAccess.getArithmeticExpressionAccess().getEntityTypeKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getEntityTypeRMLObjectEnumRuleCall_2_1_0());
					}
					lv_entityType_3_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_3_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='arithmeticOperator'
			{
				newLeafNode(otherlv_4, grammarAccess.getArithmeticExpressionAccess().getArithmeticOperatorKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getArithmeticOperatorArithmeticOperatorsEnumRuleCall_3_1_0());
					}
					lv_arithmeticOperator_5_0=ruleArithmeticOperators
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						set(
							$current,
							"arithmeticOperator",
							lv_arithmeticOperator_5_0,
							"org.xtext.example.mydsl.MyDsl.ArithmeticOperators");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='elementA'
		{
			newLeafNode(otherlv_6, grammarAccess.getArithmeticExpressionAccess().getElementAKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArithmeticExpressionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getElementAEntityCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8='elementB'
			{
				newLeafNode(otherlv_8, grammarAccess.getArithmeticExpressionAccess().getElementBKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArithmeticExpressionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getElementBEntityCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='variable'
			{
				newLeafNode(otherlv_10, grammarAccess.getArithmeticExpressionAccess().getVariableKeyword_7_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getArithmeticExpressionAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getVariableVariableParserRuleCall_7_2_0());
					}
					lv_variable_12_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
						}
						add(
							$current,
							"variable",
							lv_variable_12_0,
							"org.xtext.example.mydsl.MyDsl.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getArithmeticExpressionAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArithmeticExpressionAccess().getVariableVariableParserRuleCall_7_3_1_0());
						}
						lv_variable_14_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArithmeticExpressionRule());
							}
							add(
								$current,
								"variable",
								lv_variable_14_0,
								"org.xtext.example.mydsl.MyDsl.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getArithmeticExpressionAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getArithmeticExpressionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleGetValue
entryRuleGetValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetValueRule()); }
	iv_ruleGetValue=ruleGetValue
	{ $current=$iv_ruleGetValue.current; }
	EOF;

// Rule GetValue
ruleGetValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGetValueAccess().getGetValueAction_0(),
					$current);
			}
		)
		otherlv_1='GetValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getGetValueAccess().getGetValueKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGetValueAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='entityType'
			{
				newLeafNode(otherlv_3, grammarAccess.getGetValueAccess().getEntityTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGetValueAccess().getEntityTypeRMLObjectEnumRuleCall_3_1_0());
					}
					lv_entityType_4_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGetValueRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_4_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getGetValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleVariableRef
entryRuleVariableRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRefRule()); }
	iv_ruleVariableRef=ruleVariableRef
	{ $current=$iv_ruleVariableRef.current; }
	EOF;

// Rule VariableRef
ruleVariableRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableRefAccess().getVariableRefAction_0(),
					$current);
			}
		)
		otherlv_1='VariableRef'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableRefAccess().getVariableRefKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVariableRefAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='entityType'
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableRefAccess().getEntityTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableRefAccess().getEntityTypeRMLObjectEnumRuleCall_3_1_0());
					}
					lv_entityType_4_0=ruleRMLObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRefRule());
						}
						set(
							$current,
							"entityType",
							lv_entityType_4_0,
							"org.xtext.example.mydsl.MyDsl.RMLObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVariableRefAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule RMLObject
ruleRMLObject returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='RMLInt'
			{
				$current = grammarAccess.getRMLObjectAccess().getRMLIntEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRMLObjectAccess().getRMLIntEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='RMLString'
			{
				$current = grammarAccess.getRMLObjectAccess().getRMLStringEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRMLObjectAccess().getRMLStringEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='RMLFloat'
			{
				$current = grammarAccess.getRMLObjectAccess().getRMLFloatEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRMLObjectAccess().getRMLFloatEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='RMLDouble'
			{
				$current = grammarAccess.getRMLObjectAccess().getRMLDoubleEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRMLObjectAccess().getRMLDoubleEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='RMLBoolean'
			{
				$current = grammarAccess.getRMLObjectAccess().getRMLBooleanEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRMLObjectAccess().getRMLBooleanEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule Direction
ruleDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='forward'
			{
				$current = grammarAccess.getDirectionAccess().getForwardEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDirectionAccess().getForwardEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='backward'
			{
				$current = grammarAccess.getDirectionAccess().getBackwardEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDirectionAccess().getBackwardEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='sideLeft'
			{
				$current = grammarAccess.getDirectionAccess().getSideLeftEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDirectionAccess().getSideLeftEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='sideRight'
			{
				$current = grammarAccess.getDirectionAccess().getSideRightEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDirectionAccess().getSideRightEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule UnitMeasure
ruleUnitMeasure returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='m'
			{
				$current = grammarAccess.getUnitMeasureAccess().getMEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getUnitMeasureAccess().getMEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='dm'
			{
				$current = grammarAccess.getUnitMeasureAccess().getDmEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getUnitMeasureAccess().getDmEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='cm'
			{
				$current = grammarAccess.getUnitMeasureAccess().getCmEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getUnitMeasureAccess().getCmEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='mm'
			{
				$current = grammarAccess.getUnitMeasureAccess().getMmEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getUnitMeasureAccess().getMmEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule ArithmeticOperators
ruleArithmeticOperators returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Plus'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getPlusEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getArithmeticOperatorsAccess().getPlusEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Minus'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getMinusEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getArithmeticOperatorsAccess().getMinusEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Multiplie'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getMultiplieEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getArithmeticOperatorsAccess().getMultiplieEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Divide'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getDivideEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getArithmeticOperatorsAccess().getDivideEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Modulo'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getModuloEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getArithmeticOperatorsAccess().getModuloEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Power'
			{
				$current = grammarAccess.getArithmeticOperatorsAccess().getPowerEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getArithmeticOperatorsAccess().getPowerEnumLiteralDeclaration_5());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
