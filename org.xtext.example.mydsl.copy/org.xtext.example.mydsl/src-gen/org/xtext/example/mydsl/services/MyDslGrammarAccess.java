/*
 * generated by Xtext 2.31.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RoboMLProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RoboMLProgram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoboMLProgramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoboMLProgramKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFunctionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cFunctionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cFunctionFunctionParserRuleCall_3_2_0 = (RuleCall)cFunctionAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cFunctionAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cFunctionFunctionParserRuleCall_3_3_1_0 = (RuleCall)cFunctionAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RoboMLProgram returns RoboMLProgram:
		//    {RoboMLProgram}
		//    'RoboMLProgram'
		//    '{'
		//        ('function' '{' function+=Function ( "," function+=Function)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{RoboMLProgram}
		//'RoboMLProgram'
		//'{'
		//    ('function' '{' function+=Function ( "," function+=Function)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{RoboMLProgram}
		public Action getRoboMLProgramAction_0() { return cRoboMLProgramAction_0; }
		
		//'RoboMLProgram'
		public Keyword getRoboMLProgramKeyword_1() { return cRoboMLProgramKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('function' '{' function+=Function ( "," function+=Function)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'function'
		public Keyword getFunctionKeyword_3_0() { return cFunctionKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//function+=Function
		public Assignment getFunctionAssignment_3_2() { return cFunctionAssignment_3_2; }
		
		//Function
		public RuleCall getFunctionFunctionParserRuleCall_3_2_0() { return cFunctionFunctionParserRuleCall_3_2_0; }
		
		//( "," function+=Function)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//function+=Function
		public Assignment getFunctionAssignment_3_3_1() { return cFunctionAssignment_3_3_1; }
		
		//Function
		public RuleCall getFunctionFunctionParserRuleCall_3_3_1_0() { return cFunctionFunctionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Statement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDeplacementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRotationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cLoopParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAssignementParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSetValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConditionParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Statement returns Statement:
		//    Deplacement | Rotation | Loop | Assignement | SetValue | Condition;
		@Override public ParserRule getRule() { return rule; }
		
		//Deplacement | Rotation | Loop | Assignement | SetValue | Condition
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Deplacement
		public RuleCall getDeplacementParserRuleCall_0() { return cDeplacementParserRuleCall_0; }
		
		//Rotation
		public RuleCall getRotationParserRuleCall_1() { return cRotationParserRuleCall_1; }
		
		//Loop
		public RuleCall getLoopParserRuleCall_2() { return cLoopParserRuleCall_2; }
		
		//Assignement
		public RuleCall getAssignementParserRuleCall_3() { return cAssignementParserRuleCall_3; }
		
		//SetValue
		public RuleCall getSetValueParserRuleCall_4() { return cSetValueParserRuleCall_4; }
		
		//Condition
		public RuleCall getConditionParserRuleCall_5() { return cConditionParserRuleCall_5; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntity_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFunctionCallParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cArithmeticExpressionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGetValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cVariableRefParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Entity returns Entity:
		//    Entity_Impl | FunctionCall | ArithmeticExpression | GetValue | VariableRef;
		@Override public ParserRule getRule() { return rule; }
		
		//Entity_Impl | FunctionCall | ArithmeticExpression | GetValue | VariableRef
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Entity_Impl
		public RuleCall getEntity_ImplParserRuleCall_0() { return cEntity_ImplParserRuleCall_0; }
		
		//FunctionCall
		public RuleCall getFunctionCallParserRuleCall_1() { return cFunctionCallParserRuleCall_1; }
		
		//ArithmeticExpression
		public RuleCall getArithmeticExpressionParserRuleCall_2() { return cArithmeticExpressionParserRuleCall_2; }
		
		//GetValue
		public RuleCall getGetValueParserRuleCall_3() { return cGetValueParserRuleCall_3; }
		
		//VariableRef
		public RuleCall getVariableRefParserRuleCall_4() { return cVariableRefParserRuleCall_4; }
	}
	public class FunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Function");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFunctionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFunctionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNewAttributeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNewAttributeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNewAttributeRMLObjectEnumRuleCall_3_1_0 = (RuleCall)cNewAttributeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReturnTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReturnTypeRMLObjectEnumRuleCall_4_1_0 = (RuleCall)cReturnTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInstructionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInstructionAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInstructionStatementParserRuleCall_5_2_0 = (RuleCall)cInstructionAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInstructionAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInstructionStatementParserRuleCall_5_3_1_0 = (RuleCall)cInstructionAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVariableKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cVariableAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_6_2_0 = (RuleCall)cVariableAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cVariableAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_6_3_1_0 = (RuleCall)cVariableAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Function returns Function:
		//    {Function}
		//    'Function'
		//    '{'
		//        ('newAttribute' newAttribute=RMLObject)?
		//        ('returnType' returnType=RMLObject)?
		//        ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Function}
		//'Function'
		//'{'
		//    ('newAttribute' newAttribute=RMLObject)?
		//    ('returnType' returnType=RMLObject)?
		//    ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		//    ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Function}
		public Action getFunctionAction_0() { return cFunctionAction_0; }
		
		//'Function'
		public Keyword getFunctionKeyword_1() { return cFunctionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('newAttribute' newAttribute=RMLObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'newAttribute'
		public Keyword getNewAttributeKeyword_3_0() { return cNewAttributeKeyword_3_0; }
		
		//newAttribute=RMLObject
		public Assignment getNewAttributeAssignment_3_1() { return cNewAttributeAssignment_3_1; }
		
		//RMLObject
		public RuleCall getNewAttributeRMLObjectEnumRuleCall_3_1_0() { return cNewAttributeRMLObjectEnumRuleCall_3_1_0; }
		
		//('returnType' returnType=RMLObject)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'returnType'
		public Keyword getReturnTypeKeyword_4_0() { return cReturnTypeKeyword_4_0; }
		
		//returnType=RMLObject
		public Assignment getReturnTypeAssignment_4_1() { return cReturnTypeAssignment_4_1; }
		
		//RMLObject
		public RuleCall getReturnTypeRMLObjectEnumRuleCall_4_1_0() { return cReturnTypeRMLObjectEnumRuleCall_4_1_0; }
		
		//('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'instruction'
		public Keyword getInstructionKeyword_5_0() { return cInstructionKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//instruction+=Statement
		public Assignment getInstructionAssignment_5_2() { return cInstructionAssignment_5_2; }
		
		//Statement
		public RuleCall getInstructionStatementParserRuleCall_5_2_0() { return cInstructionStatementParserRuleCall_5_2_0; }
		
		//( "," instruction+=Statement)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//instruction+=Statement
		public Assignment getInstructionAssignment_5_3_1() { return cInstructionAssignment_5_3_1; }
		
		//Statement
		public RuleCall getInstructionStatementParserRuleCall_5_3_1_0() { return cInstructionStatementParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'variable'
		public Keyword getVariableKeyword_6_0() { return cVariableKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_6_2() { return cVariableAssignment_6_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_6_2_0() { return cVariableVariableParserRuleCall_6_2_0; }
		
		//( "," variable+=Variable)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_6_3_1() { return cVariableAssignment_6_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_6_3_1_0() { return cVariableVariableParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cVariableNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cVariableNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cVariableNameRMLObjectEnumRuleCall_3_1_0 = (RuleCall)cVariableNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cVariableValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVariableValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cVariableValueRMLObjectEnumRuleCall_4_1_0 = (RuleCall)cVariableValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVariablerefKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cVariablerefAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cVariablerefVariableRefParserRuleCall_5_2_0 = (RuleCall)cVariablerefAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cVariablerefAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cVariablerefVariableRefParserRuleCall_5_3_1_0 = (RuleCall)cVariablerefAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Variable returns Variable:
		//    {Variable}
		//    'Variable'
		//    '{'
		//        ('variableName' variableName=RMLObject)?
		//        ('variableValue' variableValue=RMLObject)?
		//        ('variableref' '{' variableref+=VariableRef ( "," variableref+=VariableRef)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Variable}
		//'Variable'
		//'{'
		//    ('variableName' variableName=RMLObject)?
		//    ('variableValue' variableValue=RMLObject)?
		//    ('variableref' '{' variableref+=VariableRef ( "," variableref+=VariableRef)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }
		
		//'Variable'
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('variableName' variableName=RMLObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'variableName'
		public Keyword getVariableNameKeyword_3_0() { return cVariableNameKeyword_3_0; }
		
		//variableName=RMLObject
		public Assignment getVariableNameAssignment_3_1() { return cVariableNameAssignment_3_1; }
		
		//RMLObject
		public RuleCall getVariableNameRMLObjectEnumRuleCall_3_1_0() { return cVariableNameRMLObjectEnumRuleCall_3_1_0; }
		
		//('variableValue' variableValue=RMLObject)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'variableValue'
		public Keyword getVariableValueKeyword_4_0() { return cVariableValueKeyword_4_0; }
		
		//variableValue=RMLObject
		public Assignment getVariableValueAssignment_4_1() { return cVariableValueAssignment_4_1; }
		
		//RMLObject
		public RuleCall getVariableValueRMLObjectEnumRuleCall_4_1_0() { return cVariableValueRMLObjectEnumRuleCall_4_1_0; }
		
		//('variableref' '{' variableref+=VariableRef ( "," variableref+=VariableRef)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'variableref'
		public Keyword getVariablerefKeyword_5_0() { return cVariablerefKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//variableref+=VariableRef
		public Assignment getVariablerefAssignment_5_2() { return cVariablerefAssignment_5_2; }
		
		//VariableRef
		public RuleCall getVariablerefVariableRefParserRuleCall_5_2_0() { return cVariablerefVariableRefParserRuleCall_5_2_0; }
		
		//( "," variableref+=VariableRef)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//variableref+=VariableRef
		public Assignment getVariablerefAssignment_5_3_1() { return cVariablerefAssignment_5_3_1; }
		
		//VariableRef
		public RuleCall getVariablerefVariableRefParserRuleCall_5_3_1_0() { return cVariablerefVariableRefParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DeplacementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Deplacement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeplacementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cMovementTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMovementTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cMovementTypeDirectionEnumRuleCall_2_1_0 = (RuleCall)cMovementTypeAssignment_2_1.eContents().get(0);
		private final Keyword cUnitKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cUnitAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cUnitUnitCrossReference_4_0 = (CrossReference)cUnitAssignment_4.eContents().get(0);
		private final RuleCall cUnitUnitEStringParserRuleCall_4_0_1 = (RuleCall)cUnitUnitCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDeplacementDistanceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDeplacementDistanceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cDeplacementDistanceEntityCrossReference_5_1_0 = (CrossReference)cDeplacementDistanceAssignment_5_1.eContents().get(0);
		private final RuleCall cDeplacementDistanceEntityEStringParserRuleCall_5_1_0_1 = (RuleCall)cDeplacementDistanceEntityCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Deplacement returns Deplacement:
		//    'Deplacement'
		//    '{'
		//        ('movementType' movementType=Direction)?
		//        'unit' unit=[Unit|EString]
		//        ('deplacementDistance' deplacementDistance=[Entity|EString])?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Deplacement'
		//'{'
		//    ('movementType' movementType=Direction)?
		//    'unit' unit=[Unit|EString]
		//    ('deplacementDistance' deplacementDistance=[Entity|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Deplacement'
		public Keyword getDeplacementKeyword_0() { return cDeplacementKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('movementType' movementType=Direction)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'movementType'
		public Keyword getMovementTypeKeyword_2_0() { return cMovementTypeKeyword_2_0; }
		
		//movementType=Direction
		public Assignment getMovementTypeAssignment_2_1() { return cMovementTypeAssignment_2_1; }
		
		//Direction
		public RuleCall getMovementTypeDirectionEnumRuleCall_2_1_0() { return cMovementTypeDirectionEnumRuleCall_2_1_0; }
		
		//'unit'
		public Keyword getUnitKeyword_3() { return cUnitKeyword_3; }
		
		//unit=[Unit|EString]
		public Assignment getUnitAssignment_4() { return cUnitAssignment_4; }
		
		//[Unit|EString]
		public CrossReference getUnitUnitCrossReference_4_0() { return cUnitUnitCrossReference_4_0; }
		
		//EString
		public RuleCall getUnitUnitEStringParserRuleCall_4_0_1() { return cUnitUnitEStringParserRuleCall_4_0_1; }
		
		//('deplacementDistance' deplacementDistance=[Entity|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'deplacementDistance'
		public Keyword getDeplacementDistanceKeyword_5_0() { return cDeplacementDistanceKeyword_5_0; }
		
		//deplacementDistance=[Entity|EString]
		public Assignment getDeplacementDistanceAssignment_5_1() { return cDeplacementDistanceAssignment_5_1; }
		
		//[Entity|EString]
		public CrossReference getDeplacementDistanceEntityCrossReference_5_1_0() { return cDeplacementDistanceEntityCrossReference_5_1_0; }
		
		//EString
		public RuleCall getDeplacementDistanceEntityEStringParserRuleCall_5_1_0_1() { return cDeplacementDistanceEntityEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Rotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRotationAngleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRotationAngleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRotationAngleEntityCrossReference_3_0 = (CrossReference)cRotationAngleAssignment_3.eContents().get(0);
		private final RuleCall cRotationAngleEntityEStringParserRuleCall_3_0_1 = (RuleCall)cRotationAngleEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRotationSensKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cRotationSensAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cRotationSensEntityCrossReference_5_0 = (CrossReference)cRotationSensAssignment_5.eContents().get(0);
		private final RuleCall cRotationSensEntityEStringParserRuleCall_5_0_1 = (RuleCall)cRotationSensEntityCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Rotation returns Rotation:
		//    'Rotation'
		//    '{'
		//        'rotationAngle' rotationAngle=[Entity|EString]
		//        'rotationSens' rotationSens=[Entity|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Rotation'
		//'{'
		//    'rotationAngle' rotationAngle=[Entity|EString]
		//    'rotationSens' rotationSens=[Entity|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Rotation'
		public Keyword getRotationKeyword_0() { return cRotationKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'rotationAngle'
		public Keyword getRotationAngleKeyword_2() { return cRotationAngleKeyword_2; }
		
		//rotationAngle=[Entity|EString]
		public Assignment getRotationAngleAssignment_3() { return cRotationAngleAssignment_3; }
		
		//[Entity|EString]
		public CrossReference getRotationAngleEntityCrossReference_3_0() { return cRotationAngleEntityCrossReference_3_0; }
		
		//EString
		public RuleCall getRotationAngleEntityEStringParserRuleCall_3_0_1() { return cRotationAngleEntityEStringParserRuleCall_3_0_1; }
		
		//'rotationSens'
		public Keyword getRotationSensKeyword_4() { return cRotationSensKeyword_4; }
		
		//rotationSens=[Entity|EString]
		public Assignment getRotationSensAssignment_5() { return cRotationSensAssignment_5; }
		
		//[Entity|EString]
		public CrossReference getRotationSensEntityCrossReference_5_0() { return cRotationSensEntityCrossReference_5_0; }
		
		//EString
		public RuleCall getRotationSensEntityEStringParserRuleCall_5_0_1() { return cRotationSensEntityEStringParserRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoopAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBooleanExpressionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBooleanExpressionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBooleanExpressionEntityCrossReference_3_1_0 = (CrossReference)cBooleanExpressionAssignment_3_1.eContents().get(0);
		private final RuleCall cBooleanExpressionEntityEStringParserRuleCall_3_1_0_1 = (RuleCall)cBooleanExpressionEntityCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInstructionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInstructionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInstructionStatementParserRuleCall_4_2_0 = (RuleCall)cInstructionAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInstructionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInstructionStatementParserRuleCall_4_3_1_0 = (RuleCall)cInstructionAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cVariableKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cVariableAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_5_2_0 = (RuleCall)cVariableAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cVariableAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_5_3_1_0 = (RuleCall)cVariableAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Loop returns Loop:
		//    {Loop}
		//    'Loop'
		//    '{'
		//        ('booleanExpression' booleanExpression=[Entity|EString])?
		//        ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Loop}
		//'Loop'
		//'{'
		//    ('booleanExpression' booleanExpression=[Entity|EString])?
		//    ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		//    ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Loop}
		public Action getLoopAction_0() { return cLoopAction_0; }
		
		//'Loop'
		public Keyword getLoopKeyword_1() { return cLoopKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('booleanExpression' booleanExpression=[Entity|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'booleanExpression'
		public Keyword getBooleanExpressionKeyword_3_0() { return cBooleanExpressionKeyword_3_0; }
		
		//booleanExpression=[Entity|EString]
		public Assignment getBooleanExpressionAssignment_3_1() { return cBooleanExpressionAssignment_3_1; }
		
		//[Entity|EString]
		public CrossReference getBooleanExpressionEntityCrossReference_3_1_0() { return cBooleanExpressionEntityCrossReference_3_1_0; }
		
		//EString
		public RuleCall getBooleanExpressionEntityEStringParserRuleCall_3_1_0_1() { return cBooleanExpressionEntityEStringParserRuleCall_3_1_0_1; }
		
		//('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'instruction'
		public Keyword getInstructionKeyword_4_0() { return cInstructionKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//instruction+=Statement
		public Assignment getInstructionAssignment_4_2() { return cInstructionAssignment_4_2; }
		
		//Statement
		public RuleCall getInstructionStatementParserRuleCall_4_2_0() { return cInstructionStatementParserRuleCall_4_2_0; }
		
		//( "," instruction+=Statement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//instruction+=Statement
		public Assignment getInstructionAssignment_4_3_1() { return cInstructionAssignment_4_3_1; }
		
		//Statement
		public RuleCall getInstructionStatementParserRuleCall_4_3_1_0() { return cInstructionStatementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'variable'
		public Keyword getVariableKeyword_5_0() { return cVariableKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_5_2() { return cVariableAssignment_5_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_5_2_0() { return cVariableVariableParserRuleCall_5_2_0; }
		
		//( "," variable+=Variable)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_5_3_1() { return cVariableAssignment_5_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_5_3_1_0() { return cVariableVariableParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class AssignementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Assignement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssignementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAssignableVariableKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAssignableVariableAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cAssignableVariableVariableCrossReference_2_1_0 = (CrossReference)cAssignableVariableAssignment_2_1.eContents().get(0);
		private final RuleCall cAssignableVariableVariableEStringParserRuleCall_2_1_0_1 = (RuleCall)cAssignableVariableVariableCrossReference_2_1_0.eContents().get(1);
		private final Keyword cEntityKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntityEntityCrossReference_4_0 = (CrossReference)cEntityAssignment_4.eContents().get(0);
		private final RuleCall cEntityEntityEStringParserRuleCall_4_0_1 = (RuleCall)cEntityEntityCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Assignement returns Assignement:
		//    'Assignement'
		//    '{'
		//        ('assignableVariable' assignableVariable=[Variable|EString])?
		//        'entity' entity=[Entity|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Assignement'
		//'{'
		//    ('assignableVariable' assignableVariable=[Variable|EString])?
		//    'entity' entity=[Entity|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Assignement'
		public Keyword getAssignementKeyword_0() { return cAssignementKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('assignableVariable' assignableVariable=[Variable|EString])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'assignableVariable'
		public Keyword getAssignableVariableKeyword_2_0() { return cAssignableVariableKeyword_2_0; }
		
		//assignableVariable=[Variable|EString]
		public Assignment getAssignableVariableAssignment_2_1() { return cAssignableVariableAssignment_2_1; }
		
		//[Variable|EString]
		public CrossReference getAssignableVariableVariableCrossReference_2_1_0() { return cAssignableVariableVariableCrossReference_2_1_0; }
		
		//EString
		public RuleCall getAssignableVariableVariableEStringParserRuleCall_2_1_0_1() { return cAssignableVariableVariableEStringParserRuleCall_2_1_0_1; }
		
		//'entity'
		public Keyword getEntityKeyword_3() { return cEntityKeyword_3; }
		
		//entity=[Entity|EString]
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }
		
		//[Entity|EString]
		public CrossReference getEntityEntityCrossReference_4_0() { return cEntityEntityCrossReference_4_0; }
		
		//EString
		public RuleCall getEntityEntityEStringParserRuleCall_4_0_1() { return cEntityEntityEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SetValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.SetValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEntityToSetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntityToSetAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cEntityToSetEntityCrossReference_3_0 = (CrossReference)cEntityToSetAssignment_3.eContents().get(0);
		private final RuleCall cEntityToSetEntityEStringParserRuleCall_3_0_1 = (RuleCall)cEntityToSetEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SetValue returns SetValue:
		//    'SetValue'
		//    '{'
		//        'entityToSet' entityToSet=[Entity|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SetValue'
		//'{'
		//    'entityToSet' entityToSet=[Entity|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'SetValue'
		public Keyword getSetValueKeyword_0() { return cSetValueKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'entityToSet'
		public Keyword getEntityToSetKeyword_2() { return cEntityToSetKeyword_2; }
		
		//entityToSet=[Entity|EString]
		public Assignment getEntityToSetAssignment_3() { return cEntityToSetAssignment_3; }
		
		//[Entity|EString]
		public CrossReference getEntityToSetEntityCrossReference_3_0() { return cEntityToSetEntityCrossReference_3_0; }
		
		//EString
		public RuleCall getEntityToSetEntityEStringParserRuleCall_3_0_1() { return cEntityToSetEntityEStringParserRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBooleanExpressionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBooleanExpressionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBooleanExpressionEntityCrossReference_3_1_0 = (CrossReference)cBooleanExpressionAssignment_3_1.eContents().get(0);
		private final RuleCall cBooleanExpressionEntityEStringParserRuleCall_3_1_0_1 = (RuleCall)cBooleanExpressionEntityCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cStatementIfKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cStatementIfAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cStatementIfStatementParserRuleCall_4_2_0 = (RuleCall)cStatementIfAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cStatementIfAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cStatementIfStatementParserRuleCall_4_3_1_0 = (RuleCall)cStatementIfAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStatementElseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cStatementElseAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cStatementElseStatementParserRuleCall_5_2_0 = (RuleCall)cStatementElseAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cStatementElseAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cStatementElseStatementParserRuleCall_5_3_1_0 = (RuleCall)cStatementElseAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVariableKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cVariableAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_6_2_0 = (RuleCall)cVariableAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cVariableAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_6_3_1_0 = (RuleCall)cVariableAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Condition returns Condition:
		//    {Condition}
		//    'Condition'
		//    '{'
		//        ('booleanExpression' booleanExpression=[Entity|EString])?
		//        ('statementIf' '{' statementIf+=Statement ( "," statementIf+=Statement)* '}' )?
		//        ('statementElse' '{' statementElse+=Statement ( "," statementElse+=Statement)* '}' )?
		//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Condition}
		//'Condition'
		//'{'
		//    ('booleanExpression' booleanExpression=[Entity|EString])?
		//    ('statementIf' '{' statementIf+=Statement ( "," statementIf+=Statement)* '}' )?
		//    ('statementElse' '{' statementElse+=Statement ( "," statementElse+=Statement)* '}' )?
		//    ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Condition}
		public Action getConditionAction_0() { return cConditionAction_0; }
		
		//'Condition'
		public Keyword getConditionKeyword_1() { return cConditionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('booleanExpression' booleanExpression=[Entity|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'booleanExpression'
		public Keyword getBooleanExpressionKeyword_3_0() { return cBooleanExpressionKeyword_3_0; }
		
		//booleanExpression=[Entity|EString]
		public Assignment getBooleanExpressionAssignment_3_1() { return cBooleanExpressionAssignment_3_1; }
		
		//[Entity|EString]
		public CrossReference getBooleanExpressionEntityCrossReference_3_1_0() { return cBooleanExpressionEntityCrossReference_3_1_0; }
		
		//EString
		public RuleCall getBooleanExpressionEntityEStringParserRuleCall_3_1_0_1() { return cBooleanExpressionEntityEStringParserRuleCall_3_1_0_1; }
		
		//('statementIf' '{' statementIf+=Statement ( "," statementIf+=Statement)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'statementIf'
		public Keyword getStatementIfKeyword_4_0() { return cStatementIfKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//statementIf+=Statement
		public Assignment getStatementIfAssignment_4_2() { return cStatementIfAssignment_4_2; }
		
		//Statement
		public RuleCall getStatementIfStatementParserRuleCall_4_2_0() { return cStatementIfStatementParserRuleCall_4_2_0; }
		
		//( "," statementIf+=Statement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//statementIf+=Statement
		public Assignment getStatementIfAssignment_4_3_1() { return cStatementIfAssignment_4_3_1; }
		
		//Statement
		public RuleCall getStatementIfStatementParserRuleCall_4_3_1_0() { return cStatementIfStatementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('statementElse' '{' statementElse+=Statement ( "," statementElse+=Statement)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'statementElse'
		public Keyword getStatementElseKeyword_5_0() { return cStatementElseKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//statementElse+=Statement
		public Assignment getStatementElseAssignment_5_2() { return cStatementElseAssignment_5_2; }
		
		//Statement
		public RuleCall getStatementElseStatementParserRuleCall_5_2_0() { return cStatementElseStatementParserRuleCall_5_2_0; }
		
		//( "," statementElse+=Statement)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//statementElse+=Statement
		public Assignment getStatementElseAssignment_5_3_1() { return cStatementElseAssignment_5_3_1; }
		
		//Statement
		public RuleCall getStatementElseStatementParserRuleCall_5_3_1_0() { return cStatementElseStatementParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'variable'
		public Keyword getVariableKeyword_6_0() { return cVariableKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_6_2() { return cVariableAssignment_6_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_6_2_0() { return cVariableVariableParserRuleCall_6_2_0; }
		
		//( "," variable+=Variable)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_6_3_1() { return cVariableAssignment_6_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_6_3_1_0() { return cVariableVariableParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Unit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUnitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeUnitMeasureEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Unit returns Unit:
		//    {Unit}
		//    'Unit'
		//    '{'
		//        ('Type' Type=UnitMeasure)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Unit}
		//'Unit'
		//'{'
		//    ('Type' Type=UnitMeasure)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Unit}
		public Action getUnitAction_0() { return cUnitAction_0; }
		
		//'Unit'
		public Keyword getUnitKeyword_1() { return cUnitKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Type' Type=UnitMeasure)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//Type=UnitMeasure
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//UnitMeasure
		public RuleCall getTypeUnitMeasureEnumRuleCall_3_1_0() { return cTypeUnitMeasureEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Entity_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Entity_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEntityTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEntityTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEntityTypeRMLObjectEnumRuleCall_3_1_0 = (RuleCall)cEntityTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity_Impl returns Entity:
		//    {Entity}
		//    'Entity'
		//    '{'
		//        ('entityType' entityType=RMLObject)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Entity}
		//'Entity'
		//'{'
		//    ('entityType' entityType=RMLObject)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }
		
		//'Entity'
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('entityType' entityType=RMLObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'entityType'
		public Keyword getEntityTypeKeyword_3_0() { return cEntityTypeKeyword_3_0; }
		
		//entityType=RMLObject
		public Assignment getEntityTypeAssignment_3_1() { return cEntityTypeAssignment_3_1; }
		
		//RMLObject
		public RuleCall getEntityTypeRMLObjectEnumRuleCall_3_1_0() { return cEntityTypeRMLObjectEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FunctionCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.FunctionCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFunctionCallKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEntityTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEntityTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cEntityTypeRMLObjectEnumRuleCall_2_1_0 = (RuleCall)cEntityTypeAssignment_2_1.eContents().get(0);
		private final Keyword cFunctionKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFunctionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cFunctionFunctionCrossReference_4_0 = (CrossReference)cFunctionAssignment_4.eContents().get(0);
		private final RuleCall cFunctionFunctionEStringParserRuleCall_4_0_1 = (RuleCall)cFunctionFunctionCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//FunctionCall returns FunctionCall:
		//    'FunctionCall'
		//    '{'
		//        ('entityType' entityType=RMLObject)?
		//        'function' function=[Function|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FunctionCall'
		//'{'
		//    ('entityType' entityType=RMLObject)?
		//    'function' function=[Function|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FunctionCall'
		public Keyword getFunctionCallKeyword_0() { return cFunctionCallKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('entityType' entityType=RMLObject)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'entityType'
		public Keyword getEntityTypeKeyword_2_0() { return cEntityTypeKeyword_2_0; }
		
		//entityType=RMLObject
		public Assignment getEntityTypeAssignment_2_1() { return cEntityTypeAssignment_2_1; }
		
		//RMLObject
		public RuleCall getEntityTypeRMLObjectEnumRuleCall_2_1_0() { return cEntityTypeRMLObjectEnumRuleCall_2_1_0; }
		
		//'function'
		public Keyword getFunctionKeyword_3() { return cFunctionKeyword_3; }
		
		//function=[Function|EString]
		public Assignment getFunctionAssignment_4() { return cFunctionAssignment_4; }
		
		//[Function|EString]
		public CrossReference getFunctionFunctionCrossReference_4_0() { return cFunctionFunctionCrossReference_4_0; }
		
		//EString
		public RuleCall getFunctionFunctionEStringParserRuleCall_4_0_1() { return cFunctionFunctionEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ArithmeticExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ArithmeticExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArithmeticExpressionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEntityTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cEntityTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cEntityTypeRMLObjectEnumRuleCall_2_1_0 = (RuleCall)cEntityTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArithmeticOperatorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArithmeticOperatorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArithmeticOperatorArithmeticOperatorsEnumRuleCall_3_1_0 = (RuleCall)cArithmeticOperatorAssignment_3_1.eContents().get(0);
		private final Keyword cElementAKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cElementAAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cElementAEntityCrossReference_5_0 = (CrossReference)cElementAAssignment_5.eContents().get(0);
		private final RuleCall cElementAEntityEStringParserRuleCall_5_0_1 = (RuleCall)cElementAEntityCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cElementBKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cElementBAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cElementBEntityCrossReference_6_1_0 = (CrossReference)cElementBAssignment_6_1.eContents().get(0);
		private final RuleCall cElementBEntityEStringParserRuleCall_6_1_0_1 = (RuleCall)cElementBEntityCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVariableKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cVariableAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cVariableVariableParserRuleCall_7_2_0 = (RuleCall)cVariableAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cVariableAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cVariableVariableParserRuleCall_7_3_1_0 = (RuleCall)cVariableAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ArithmeticExpression returns ArithmeticExpression:
		//    'ArithmeticExpression'
		//    '{'
		//        ('entityType' entityType=RMLObject)?
		//        ('arithmeticOperator' arithmeticOperator=ArithmeticOperators)?
		//        'elementA' elementA=[Entity|EString]
		//        ('elementB' elementB=[Entity|EString])?
		//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ArithmeticExpression'
		//'{'
		//    ('entityType' entityType=RMLObject)?
		//    ('arithmeticOperator' arithmeticOperator=ArithmeticOperators)?
		//    'elementA' elementA=[Entity|EString]
		//    ('elementB' elementB=[Entity|EString])?
		//    ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ArithmeticExpression'
		public Keyword getArithmeticExpressionKeyword_0() { return cArithmeticExpressionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('entityType' entityType=RMLObject)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'entityType'
		public Keyword getEntityTypeKeyword_2_0() { return cEntityTypeKeyword_2_0; }
		
		//entityType=RMLObject
		public Assignment getEntityTypeAssignment_2_1() { return cEntityTypeAssignment_2_1; }
		
		//RMLObject
		public RuleCall getEntityTypeRMLObjectEnumRuleCall_2_1_0() { return cEntityTypeRMLObjectEnumRuleCall_2_1_0; }
		
		//('arithmeticOperator' arithmeticOperator=ArithmeticOperators)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'arithmeticOperator'
		public Keyword getArithmeticOperatorKeyword_3_0() { return cArithmeticOperatorKeyword_3_0; }
		
		//arithmeticOperator=ArithmeticOperators
		public Assignment getArithmeticOperatorAssignment_3_1() { return cArithmeticOperatorAssignment_3_1; }
		
		//ArithmeticOperators
		public RuleCall getArithmeticOperatorArithmeticOperatorsEnumRuleCall_3_1_0() { return cArithmeticOperatorArithmeticOperatorsEnumRuleCall_3_1_0; }
		
		//'elementA'
		public Keyword getElementAKeyword_4() { return cElementAKeyword_4; }
		
		//elementA=[Entity|EString]
		public Assignment getElementAAssignment_5() { return cElementAAssignment_5; }
		
		//[Entity|EString]
		public CrossReference getElementAEntityCrossReference_5_0() { return cElementAEntityCrossReference_5_0; }
		
		//EString
		public RuleCall getElementAEntityEStringParserRuleCall_5_0_1() { return cElementAEntityEStringParserRuleCall_5_0_1; }
		
		//('elementB' elementB=[Entity|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'elementB'
		public Keyword getElementBKeyword_6_0() { return cElementBKeyword_6_0; }
		
		//elementB=[Entity|EString]
		public Assignment getElementBAssignment_6_1() { return cElementBAssignment_6_1; }
		
		//[Entity|EString]
		public CrossReference getElementBEntityCrossReference_6_1_0() { return cElementBEntityCrossReference_6_1_0; }
		
		//EString
		public RuleCall getElementBEntityEStringParserRuleCall_6_1_0_1() { return cElementBEntityEStringParserRuleCall_6_1_0_1; }
		
		//('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'variable'
		public Keyword getVariableKeyword_7_0() { return cVariableKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_7_2() { return cVariableAssignment_7_2; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_7_2_0() { return cVariableVariableParserRuleCall_7_2_0; }
		
		//( "," variable+=Variable)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//variable+=Variable
		public Assignment getVariableAssignment_7_3_1() { return cVariableAssignment_7_3_1; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_7_3_1_0() { return cVariableVariableParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class GetValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.GetValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGetValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGetValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEntityTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEntityTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEntityTypeRMLObjectEnumRuleCall_3_1_0 = (RuleCall)cEntityTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GetValue returns GetValue:
		//    {GetValue}
		//    'GetValue'
		//    '{'
		//        ('entityType' entityType=RMLObject)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{GetValue}
		//'GetValue'
		//'{'
		//    ('entityType' entityType=RMLObject)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{GetValue}
		public Action getGetValueAction_0() { return cGetValueAction_0; }
		
		//'GetValue'
		public Keyword getGetValueKeyword_1() { return cGetValueKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('entityType' entityType=RMLObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'entityType'
		public Keyword getEntityTypeKeyword_3_0() { return cEntityTypeKeyword_3_0; }
		
		//entityType=RMLObject
		public Assignment getEntityTypeAssignment_3_1() { return cEntityTypeAssignment_3_1; }
		
		//RMLObject
		public RuleCall getEntityTypeRMLObjectEnumRuleCall_3_1_0() { return cEntityTypeRMLObjectEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VariableRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.VariableRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableRefAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cEntityTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cEntityTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cEntityTypeRMLObjectEnumRuleCall_3_1_0 = (RuleCall)cEntityTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//VariableRef returns VariableRef:
		//    {VariableRef}
		//    'VariableRef'
		//    '{'
		//        ('entityType' entityType=RMLObject)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{VariableRef}
		//'VariableRef'
		//'{'
		//    ('entityType' entityType=RMLObject)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{VariableRef}
		public Action getVariableRefAction_0() { return cVariableRefAction_0; }
		
		//'VariableRef'
		public Keyword getVariableRefKeyword_1() { return cVariableRefKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('entityType' entityType=RMLObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'entityType'
		public Keyword getEntityTypeKeyword_3_0() { return cEntityTypeKeyword_3_0; }
		
		//entityType=RMLObject
		public Assignment getEntityTypeAssignment_3_1() { return cEntityTypeAssignment_3_1; }
		
		//RMLObject
		public RuleCall getEntityTypeRMLObjectEnumRuleCall_3_1_0() { return cEntityTypeRMLObjectEnumRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING|ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING|ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class RMLObjectElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.RMLObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cRMLIntEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cRMLIntRMLIntKeyword_0_0 = (Keyword)cRMLIntEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRMLStringEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRMLStringRMLStringKeyword_1_0 = (Keyword)cRMLStringEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRMLFloatEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRMLFloatRMLFloatKeyword_2_0 = (Keyword)cRMLFloatEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cRMLDoubleEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cRMLDoubleRMLDoubleKeyword_3_0 = (Keyword)cRMLDoubleEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRMLBooleanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRMLBooleanRMLBooleanKeyword_4_0 = (Keyword)cRMLBooleanEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum RMLObject returns RMLObject:
		//                RMLInt = 'RMLInt' | RMLString = 'RMLString' | RMLFloat = 'RMLFloat' | RMLDouble = 'RMLDouble' | RMLBoolean = 'RMLBoolean';
		public EnumRule getRule() { return rule; }
		
		//RMLInt = 'RMLInt' | RMLString = 'RMLString' | RMLFloat = 'RMLFloat' | RMLDouble = 'RMLDouble' | RMLBoolean = 'RMLBoolean'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//RMLInt = 'RMLInt'
		public EnumLiteralDeclaration getRMLIntEnumLiteralDeclaration_0() { return cRMLIntEnumLiteralDeclaration_0; }
		
		//'RMLInt'
		public Keyword getRMLIntRMLIntKeyword_0_0() { return cRMLIntRMLIntKeyword_0_0; }
		
		//RMLString = 'RMLString'
		public EnumLiteralDeclaration getRMLStringEnumLiteralDeclaration_1() { return cRMLStringEnumLiteralDeclaration_1; }
		
		//'RMLString'
		public Keyword getRMLStringRMLStringKeyword_1_0() { return cRMLStringRMLStringKeyword_1_0; }
		
		//RMLFloat = 'RMLFloat'
		public EnumLiteralDeclaration getRMLFloatEnumLiteralDeclaration_2() { return cRMLFloatEnumLiteralDeclaration_2; }
		
		//'RMLFloat'
		public Keyword getRMLFloatRMLFloatKeyword_2_0() { return cRMLFloatRMLFloatKeyword_2_0; }
		
		//RMLDouble = 'RMLDouble'
		public EnumLiteralDeclaration getRMLDoubleEnumLiteralDeclaration_3() { return cRMLDoubleEnumLiteralDeclaration_3; }
		
		//'RMLDouble'
		public Keyword getRMLDoubleRMLDoubleKeyword_3_0() { return cRMLDoubleRMLDoubleKeyword_3_0; }
		
		//RMLBoolean = 'RMLBoolean'
		public EnumLiteralDeclaration getRMLBooleanEnumLiteralDeclaration_4() { return cRMLBooleanEnumLiteralDeclaration_4; }
		
		//'RMLBoolean'
		public Keyword getRMLBooleanRMLBooleanKeyword_4_0() { return cRMLBooleanRMLBooleanKeyword_4_0; }
	}
	public class DirectionElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Direction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cForwardEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cForwardForwardKeyword_0_0 = (Keyword)cForwardEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBackwardEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBackwardBackwardKeyword_1_0 = (Keyword)cBackwardEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSideLeftEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSideLeftSideLeftKeyword_2_0 = (Keyword)cSideLeftEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSideRightEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSideRightSideRightKeyword_3_0 = (Keyword)cSideRightEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Direction returns Direction:
		//                forward = 'forward' | backward = 'backward' | sideLeft = 'sideLeft' | sideRight = 'sideRight';
		public EnumRule getRule() { return rule; }
		
		//forward = 'forward' | backward = 'backward' | sideLeft = 'sideLeft' | sideRight = 'sideRight'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//forward = 'forward'
		public EnumLiteralDeclaration getForwardEnumLiteralDeclaration_0() { return cForwardEnumLiteralDeclaration_0; }
		
		//'forward'
		public Keyword getForwardForwardKeyword_0_0() { return cForwardForwardKeyword_0_0; }
		
		//backward = 'backward'
		public EnumLiteralDeclaration getBackwardEnumLiteralDeclaration_1() { return cBackwardEnumLiteralDeclaration_1; }
		
		//'backward'
		public Keyword getBackwardBackwardKeyword_1_0() { return cBackwardBackwardKeyword_1_0; }
		
		//sideLeft = 'sideLeft'
		public EnumLiteralDeclaration getSideLeftEnumLiteralDeclaration_2() { return cSideLeftEnumLiteralDeclaration_2; }
		
		//'sideLeft'
		public Keyword getSideLeftSideLeftKeyword_2_0() { return cSideLeftSideLeftKeyword_2_0; }
		
		//sideRight = 'sideRight'
		public EnumLiteralDeclaration getSideRightEnumLiteralDeclaration_3() { return cSideRightEnumLiteralDeclaration_3; }
		
		//'sideRight'
		public Keyword getSideRightSideRightKeyword_3_0() { return cSideRightSideRightKeyword_3_0; }
	}
	public class UnitMeasureElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.UnitMeasure");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMMKeyword_0_0 = (Keyword)cMEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDmEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDmDmKeyword_1_0 = (Keyword)cDmEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCmEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCmCmKeyword_2_0 = (Keyword)cCmEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMmEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMmMmKeyword_3_0 = (Keyword)cMmEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum UnitMeasure returns UnitMeasure:
		//                m = 'm' | dm = 'dm' | cm = 'cm' | mm = 'mm';
		public EnumRule getRule() { return rule; }
		
		//m = 'm' | dm = 'dm' | cm = 'cm' | mm = 'mm'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//m = 'm'
		public EnumLiteralDeclaration getMEnumLiteralDeclaration_0() { return cMEnumLiteralDeclaration_0; }
		
		//'m'
		public Keyword getMMKeyword_0_0() { return cMMKeyword_0_0; }
		
		//dm = 'dm'
		public EnumLiteralDeclaration getDmEnumLiteralDeclaration_1() { return cDmEnumLiteralDeclaration_1; }
		
		//'dm'
		public Keyword getDmDmKeyword_1_0() { return cDmDmKeyword_1_0; }
		
		//cm = 'cm'
		public EnumLiteralDeclaration getCmEnumLiteralDeclaration_2() { return cCmEnumLiteralDeclaration_2; }
		
		//'cm'
		public Keyword getCmCmKeyword_2_0() { return cCmCmKeyword_2_0; }
		
		//mm = 'mm'
		public EnumLiteralDeclaration getMmEnumLiteralDeclaration_3() { return cMmEnumLiteralDeclaration_3; }
		
		//'mm'
		public Keyword getMmMmKeyword_3_0() { return cMmMmKeyword_3_0; }
	}
	public class ArithmeticOperatorsElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ArithmeticOperators");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPlusEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPlusPlusKeyword_0_0 = (Keyword)cPlusEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMinusEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMinusMinusKeyword_1_0 = (Keyword)cMinusEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMultiplieEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMultiplieMultiplieKeyword_2_0 = (Keyword)cMultiplieEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDivideEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDivideDivideKeyword_3_0 = (Keyword)cDivideEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cModuloEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cModuloModuloKeyword_4_0 = (Keyword)cModuloEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPowerEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPowerPowerKeyword_5_0 = (Keyword)cPowerEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ArithmeticOperators returns ArithmeticOperators:
		//                Plus = 'Plus' | Minus = 'Minus' | Multiplie = 'Multiplie' | Divide = 'Divide' | Modulo = 'Modulo' | Power = 'Power';
		public EnumRule getRule() { return rule; }
		
		//Plus = 'Plus' | Minus = 'Minus' | Multiplie = 'Multiplie' | Divide = 'Divide' | Modulo = 'Modulo' | Power = 'Power'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Plus = 'Plus'
		public EnumLiteralDeclaration getPlusEnumLiteralDeclaration_0() { return cPlusEnumLiteralDeclaration_0; }
		
		//'Plus'
		public Keyword getPlusPlusKeyword_0_0() { return cPlusPlusKeyword_0_0; }
		
		//Minus = 'Minus'
		public EnumLiteralDeclaration getMinusEnumLiteralDeclaration_1() { return cMinusEnumLiteralDeclaration_1; }
		
		//'Minus'
		public Keyword getMinusMinusKeyword_1_0() { return cMinusMinusKeyword_1_0; }
		
		//Multiplie = 'Multiplie'
		public EnumLiteralDeclaration getMultiplieEnumLiteralDeclaration_2() { return cMultiplieEnumLiteralDeclaration_2; }
		
		//'Multiplie'
		public Keyword getMultiplieMultiplieKeyword_2_0() { return cMultiplieMultiplieKeyword_2_0; }
		
		//Divide = 'Divide'
		public EnumLiteralDeclaration getDivideEnumLiteralDeclaration_3() { return cDivideEnumLiteralDeclaration_3; }
		
		//'Divide'
		public Keyword getDivideDivideKeyword_3_0() { return cDivideDivideKeyword_3_0; }
		
		//Modulo = 'Modulo'
		public EnumLiteralDeclaration getModuloEnumLiteralDeclaration_4() { return cModuloEnumLiteralDeclaration_4; }
		
		//'Modulo'
		public Keyword getModuloModuloKeyword_4_0() { return cModuloModuloKeyword_4_0; }
		
		//Power = 'Power'
		public EnumLiteralDeclaration getPowerEnumLiteralDeclaration_5() { return cPowerEnumLiteralDeclaration_5; }
		
		//'Power'
		public Keyword getPowerPowerKeyword_5_0() { return cPowerPowerKeyword_5_0; }
	}
	
	private final RoboMLProgramElements pRoboMLProgram;
	private final StatementElements pStatement;
	private final EntityElements pEntity;
	private final FunctionElements pFunction;
	private final RMLObjectElements eRMLObject;
	private final VariableElements pVariable;
	private final DeplacementElements pDeplacement;
	private final RotationElements pRotation;
	private final LoopElements pLoop;
	private final AssignementElements pAssignement;
	private final SetValueElements pSetValue;
	private final ConditionElements pCondition;
	private final UnitElements pUnit;
	private final Entity_ImplElements pEntity_Impl;
	private final DirectionElements eDirection;
	private final UnitMeasureElements eUnitMeasure;
	private final FunctionCallElements pFunctionCall;
	private final ArithmeticExpressionElements pArithmeticExpression;
	private final GetValueElements pGetValue;
	private final VariableRefElements pVariableRef;
	private final ArithmeticOperatorsElements eArithmeticOperators;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRoboMLProgram = new RoboMLProgramElements();
		this.pStatement = new StatementElements();
		this.pEntity = new EntityElements();
		this.pFunction = new FunctionElements();
		this.eRMLObject = new RMLObjectElements();
		this.pVariable = new VariableElements();
		this.pDeplacement = new DeplacementElements();
		this.pRotation = new RotationElements();
		this.pLoop = new LoopElements();
		this.pAssignement = new AssignementElements();
		this.pSetValue = new SetValueElements();
		this.pCondition = new ConditionElements();
		this.pUnit = new UnitElements();
		this.pEntity_Impl = new Entity_ImplElements();
		this.eDirection = new DirectionElements();
		this.eUnitMeasure = new UnitMeasureElements();
		this.pFunctionCall = new FunctionCallElements();
		this.pArithmeticExpression = new ArithmeticExpressionElements();
		this.pGetValue = new GetValueElements();
		this.pVariableRef = new VariableRefElements();
		this.eArithmeticOperators = new ArithmeticOperatorsElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RoboMLProgram returns RoboMLProgram:
	//    {RoboMLProgram}
	//    'RoboMLProgram'
	//    '{'
	//        ('function' '{' function+=Function ( "," function+=Function)* '}' )?
	//    '}';
	public RoboMLProgramElements getRoboMLProgramAccess() {
		return pRoboMLProgram;
	}
	
	public ParserRule getRoboMLProgramRule() {
		return getRoboMLProgramAccess().getRule();
	}
	
	//Statement returns Statement:
	//    Deplacement | Rotation | Loop | Assignement | SetValue | Condition;
	public StatementElements getStatementAccess() {
		return pStatement;
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//Entity returns Entity:
	//    Entity_Impl | FunctionCall | ArithmeticExpression | GetValue | VariableRef;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Function returns Function:
	//    {Function}
	//    'Function'
	//    '{'
	//        ('newAttribute' newAttribute=RMLObject)?
	//        ('returnType' returnType=RMLObject)?
	//        ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
	//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
	//    '}';
	public FunctionElements getFunctionAccess() {
		return pFunction;
	}
	
	public ParserRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//enum RMLObject returns RMLObject:
	//                RMLInt = 'RMLInt' | RMLString = 'RMLString' | RMLFloat = 'RMLFloat' | RMLDouble = 'RMLDouble' | RMLBoolean = 'RMLBoolean';
	public RMLObjectElements getRMLObjectAccess() {
		return eRMLObject;
	}
	
	public EnumRule getRMLObjectRule() {
		return getRMLObjectAccess().getRule();
	}
	
	//Variable returns Variable:
	//    {Variable}
	//    'Variable'
	//    '{'
	//        ('variableName' variableName=RMLObject)?
	//        ('variableValue' variableValue=RMLObject)?
	//        ('variableref' '{' variableref+=VariableRef ( "," variableref+=VariableRef)* '}' )?
	//    '}';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//Deplacement returns Deplacement:
	//    'Deplacement'
	//    '{'
	//        ('movementType' movementType=Direction)?
	//        'unit' unit=[Unit|EString]
	//        ('deplacementDistance' deplacementDistance=[Entity|EString])?
	//    '}';
	public DeplacementElements getDeplacementAccess() {
		return pDeplacement;
	}
	
	public ParserRule getDeplacementRule() {
		return getDeplacementAccess().getRule();
	}
	
	//Rotation returns Rotation:
	//    'Rotation'
	//    '{'
	//        'rotationAngle' rotationAngle=[Entity|EString]
	//        'rotationSens' rotationSens=[Entity|EString]
	//    '}';
	public RotationElements getRotationAccess() {
		return pRotation;
	}
	
	public ParserRule getRotationRule() {
		return getRotationAccess().getRule();
	}
	
	//Loop returns Loop:
	//    {Loop}
	//    'Loop'
	//    '{'
	//        ('booleanExpression' booleanExpression=[Entity|EString])?
	//        ('instruction' '{' instruction+=Statement ( "," instruction+=Statement)* '}' )?
	//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
	//    '}';
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//Assignement returns Assignement:
	//    'Assignement'
	//    '{'
	//        ('assignableVariable' assignableVariable=[Variable|EString])?
	//        'entity' entity=[Entity|EString]
	//    '}';
	public AssignementElements getAssignementAccess() {
		return pAssignement;
	}
	
	public ParserRule getAssignementRule() {
		return getAssignementAccess().getRule();
	}
	
	//SetValue returns SetValue:
	//    'SetValue'
	//    '{'
	//        'entityToSet' entityToSet=[Entity|EString]
	//    '}';
	public SetValueElements getSetValueAccess() {
		return pSetValue;
	}
	
	public ParserRule getSetValueRule() {
		return getSetValueAccess().getRule();
	}
	
	//Condition returns Condition:
	//    {Condition}
	//    'Condition'
	//    '{'
	//        ('booleanExpression' booleanExpression=[Entity|EString])?
	//        ('statementIf' '{' statementIf+=Statement ( "," statementIf+=Statement)* '}' )?
	//        ('statementElse' '{' statementElse+=Statement ( "," statementElse+=Statement)* '}' )?
	//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
	//    '}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Unit returns Unit:
	//    {Unit}
	//    'Unit'
	//    '{'
	//        ('Type' Type=UnitMeasure)?
	//    '}';
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//Entity_Impl returns Entity:
	//    {Entity}
	//    'Entity'
	//    '{'
	//        ('entityType' entityType=RMLObject)?
	//    '}';
	public Entity_ImplElements getEntity_ImplAccess() {
		return pEntity_Impl;
	}
	
	public ParserRule getEntity_ImplRule() {
		return getEntity_ImplAccess().getRule();
	}
	
	//enum Direction returns Direction:
	//                forward = 'forward' | backward = 'backward' | sideLeft = 'sideLeft' | sideRight = 'sideRight';
	public DirectionElements getDirectionAccess() {
		return eDirection;
	}
	
	public EnumRule getDirectionRule() {
		return getDirectionAccess().getRule();
	}
	
	//enum UnitMeasure returns UnitMeasure:
	//                m = 'm' | dm = 'dm' | cm = 'cm' | mm = 'mm';
	public UnitMeasureElements getUnitMeasureAccess() {
		return eUnitMeasure;
	}
	
	public EnumRule getUnitMeasureRule() {
		return getUnitMeasureAccess().getRule();
	}
	
	//FunctionCall returns FunctionCall:
	//    'FunctionCall'
	//    '{'
	//        ('entityType' entityType=RMLObject)?
	//        'function' function=[Function|EString]
	//    '}';
	public FunctionCallElements getFunctionCallAccess() {
		return pFunctionCall;
	}
	
	public ParserRule getFunctionCallRule() {
		return getFunctionCallAccess().getRule();
	}
	
	//ArithmeticExpression returns ArithmeticExpression:
	//    'ArithmeticExpression'
	//    '{'
	//        ('entityType' entityType=RMLObject)?
	//        ('arithmeticOperator' arithmeticOperator=ArithmeticOperators)?
	//        'elementA' elementA=[Entity|EString]
	//        ('elementB' elementB=[Entity|EString])?
	//        ('variable' '{' variable+=Variable ( "," variable+=Variable)* '}' )?
	//    '}';
	public ArithmeticExpressionElements getArithmeticExpressionAccess() {
		return pArithmeticExpression;
	}
	
	public ParserRule getArithmeticExpressionRule() {
		return getArithmeticExpressionAccess().getRule();
	}
	
	//GetValue returns GetValue:
	//    {GetValue}
	//    'GetValue'
	//    '{'
	//        ('entityType' entityType=RMLObject)?
	//    '}';
	public GetValueElements getGetValueAccess() {
		return pGetValue;
	}
	
	public ParserRule getGetValueRule() {
		return getGetValueAccess().getRule();
	}
	
	//VariableRef returns VariableRef:
	//    {VariableRef}
	//    'VariableRef'
	//    '{'
	//        ('entityType' entityType=RMLObject)?
	//    '}';
	public VariableRefElements getVariableRefAccess() {
		return pVariableRef;
	}
	
	public ParserRule getVariableRefRule() {
		return getVariableRefAccess().getRule();
	}
	
	//enum ArithmeticOperators returns ArithmeticOperators:
	//                Plus = 'Plus' | Minus = 'Minus' | Multiplie = 'Multiplie' | Divide = 'Divide' | Modulo = 'Modulo' | Power = 'Power';
	public ArithmeticOperatorsElements getArithmeticOperatorsAccess() {
		return eArithmeticOperators;
	}
	
	public EnumRule getArithmeticOperatorsRule() {
		return getArithmeticOperatorsAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING|ID
	//;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
